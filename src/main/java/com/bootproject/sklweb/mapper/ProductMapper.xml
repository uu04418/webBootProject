<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bootproject.sklweb.mapper.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.bootproject.sklweb.entity.Product" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="categoryid" property="categoryid" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="height" property="height" jdbcType="DOUBLE" />
    <result column="width" property="width" jdbcType="DOUBLE" />
    <result column="pictures" property="pictures" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="sceneid" property="sceneid" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="istop" property="istop" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userid, categoryid, name, height, width, pictures, content, sceneid, state, createtime, 
    updatetime, istop
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bootproject.sklweb.entity.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from product
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bootproject.sklweb.entity.ProductExample" >
    delete from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bootproject.sklweb.entity.Product" >
    insert into product (id, userid, categoryid, 
      name, height, width, 
      pictures, content, sceneid, 
      state, createtime, updatetime, 
      istop)
    values (#{id,jdbcType=BIGINT}, #{userid,jdbcType=VARCHAR}, #{categoryid,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{height,jdbcType=DOUBLE}, #{width,jdbcType=DOUBLE}, 
      #{pictures,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{sceneid,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{istop,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bootproject.sklweb.entity.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="categoryid != null" >
        categoryid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="height != null" >
        height,
      </if>
      <if test="width != null" >
        width,
      </if>
      <if test="pictures != null" >
        pictures,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="sceneid != null" >
        sceneid,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="istop != null" >
        istop,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="categoryid != null" >
        #{categoryid,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="height != null" >
        #{height,jdbcType=DOUBLE},
      </if>
      <if test="width != null" >
        #{width,jdbcType=DOUBLE},
      </if>
      <if test="pictures != null" >
        #{pictures,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="sceneid != null" >
        #{sceneid,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="istop != null" >
        #{istop,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bootproject.sklweb.entity.ProductExample" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryid != null" >
        categoryid = #{record.categoryid,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.height != null" >
        height = #{record.height,jdbcType=DOUBLE},
      </if>
      <if test="record.width != null" >
        width = #{record.width,jdbcType=DOUBLE},
      </if>
      <if test="record.pictures != null" >
        pictures = #{record.pictures,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.sceneid != null" >
        sceneid = #{record.sceneid,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.istop != null" >
        istop = #{record.istop,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product
    set id = #{record.id,jdbcType=BIGINT},
      userid = #{record.userid,jdbcType=VARCHAR},
      categoryid = #{record.categoryid,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      height = #{record.height,jdbcType=DOUBLE},
      width = #{record.width,jdbcType=DOUBLE},
      pictures = #{record.pictures,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      sceneid = #{record.sceneid,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      istop = #{record.istop,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bootproject.sklweb.entity.Product" >
    update product
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="categoryid != null" >
        categoryid = #{categoryid,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="height != null" >
        height = #{height,jdbcType=DOUBLE},
      </if>
      <if test="width != null" >
        width = #{width,jdbcType=DOUBLE},
      </if>
      <if test="pictures != null" >
        pictures = #{pictures,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="sceneid != null" >
        sceneid = #{sceneid,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="istop != null" >
        istop = #{istop,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bootproject.sklweb.entity.Product" >
    update product
    set userid = #{userid,jdbcType=VARCHAR},
      categoryid = #{categoryid,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      height = #{height,jdbcType=DOUBLE},
      width = #{width,jdbcType=DOUBLE},
      pictures = #{pictures,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      sceneid = #{sceneid,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      istop = #{istop,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>